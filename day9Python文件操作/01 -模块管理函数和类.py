"""
1、什么是模块： 一个.py文件就是一个模块

2、import :可以通过import 关键字导入其他的模块
格式： import 模块名（.py文件名，没有后缀）
直接导入模块的时候，相当于把被导入的模块里面的内容粘贴到import位置

3、怎么使用模块中的内容，什么模块能用？
import 模块名 --->导入模块中所有的内容
模块名.的方式去使用模块中的内容
在模块中声明全局变量都可以使用(普通变量，函数，类，global声明的变量)
"""
print('======')
import other201807
print('11---', other201807.__name__)  # 打印的是模块的名字
print('======')

"""
4、 from 模块 import 内容1，内容2，内容3.。。。--->导入模块中指定的内容
使用内容的时候，不用在被导入的变量或者函数或者类前面加模块名
使用的时候还是会把模块的内容复制了一遍，但只能使用导入的内容
"""
from other2 import func_name1

func_name1()

"""
5、阻止被导入的模块中的不必要的代码被粘贴到当前模块
一般情况下，除了函数的声明和类的声明以外，其他的代码都放入if里面

__name__:是每个模块自带的一个属性，是用来保存当前这个模块的名字的。
但是当正在执行当前模块的时候，这个属性的值是固定的'__main__'
"""
if __name__ =='__main__':
    # 这个里面的代码不会被其他的模块使用
    pass

"""
6、使用as重命名
import 模块名 as 新的名字
from 模块名 import 函数名 as 新的函数名字
"""
import math as my_math

print(my_math.pi)
